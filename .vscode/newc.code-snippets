{
	// Place your ASCIIDungeons workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"New component": {
		"scope": "javascript",
		"prefix": "newc",
		"body": [
			"import React from 'react';",
			"import { makeStyles } from '@material-ui/core';",
			"import PropTypes from 'prop-types';",
			"",
			"function $TM_FILENAME_BASE(props){",
			"  const classes = useStyles();",
			"  const {} = props;",
			"",
			"  return <div className={classes.${TM_FILENAME_BASE/(^[A-Z])/${1:/downcase}/g}Root}></div>;",
			"}",
			"",
			"const useStyles = makeStyles({",
			"  ${TM_FILENAME_BASE/(^[A-Z])/${1:/downcase}/g}Root: {}",
			"});",
			"",
			"$TM_FILENAME_BASE.propTypes = {};",
			"",
			"$TM_FILENAME_BASE.defaultProps = {};",
			"",
			"export default $TM_FILENAME_BASE;"
		],
		"description": "Create a new React component"
	}
}